apply plugin: "net.corda.plugins.cordapp"
apply plugin: "net.corda.plugins.cordformation"
apply plugin: 'net.corda.plugins.quasar-utils'
apply from: "./docker.gradle"

rootProject.ext.corda_release_version = cordaCoreVersion // required for cordform

dependencies {
    cordaRuntime "$cordaCoreReleaseGroup:corda:$cordaCoreVersion"
    cordaCompile "$cordaCoreReleaseGroup:corda-node-api:$cordaCoreVersion"

    cordaCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    cordaCompile "org.slf4j:jul-to-slf4j:$slf4jVersion"

    cordapp project(":gallery-contracts")
    cordapp project(":gallery-workflows")
    project(":spring-api")
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

/**
 * Task for single network local deployment for basic testing
 */
task deployNodes(type: net.corda.plugins.Cordform, dependsOn: [':gallery-contracts:jar', ':gallery-workflows:jar']) {
    group = "deployment"

    directory "./build/nodes"
    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":gallery-contracts")
        cordapp project(":gallery-workflows")
    }
    signing {
        enabled false
    }
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps = []
    }
    node {
        name "O=Alice,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        extraConfig = [
                h2Settings: [ address: 'localhost:10007' ]
        ]
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=Bob,L=London,C=GB"
        p2pPort 10015
        rpcSettings {
            address("localhost:10016")
            adminAddress("localhost:10056")
        }
        extraConfig = [
                h2Settings: [ address: 'localhost:10017' ]
        ]
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=Charlie,L=London,C=GB"
        p2pPort 10025
        rpcSettings {
            address("localhost:10026")
            adminAddress("localhost:10066")
        }
        extraConfig = [
                h2Settings: [ address: 'localhost:10027' ]
        ]
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}

task prepareDockerNodes(type: net.corda.plugins.Dockerform) {
    group = "deployment"

    dockerImage = "corda/corda-zulu-java1.8-" + corda_release_version + ":latest"

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":gallery-contracts")
        cordapp project(":gallery-workflows")
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10001
        p2pAddress "0.0.0.0"
        rpcSettings {
            address("0.0.0.0:10011")
            adminAddress("0.0.0.0:10041")
        }
        sshdPort 2221
    }

    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10002
        p2pAddress "0.0.0.0"
        rpcSettings {
            address("0.0.0.0:10012")
            adminAddress("0.0.0.0:10042")
        }
        sshdPort 2222
    }

    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10003
        p2pAddress "0.0.0.0"
        rpcSettings {
            address("0.0.0.0:10013")
            adminAddress("0.0.0.0:10043")
        }
        sshdPort 2223
    }
}
